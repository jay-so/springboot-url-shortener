name: ci

on:
  push: # 아래 브랜치에 Push되면 작동
    branches: [ "main" ]
  pull_request: # 아래 브랜치에 PullRequest 되면 작동
    branches: [ "main" ]

# PR check, Comment 권한 설정
permissions:
  checks: write
  pull-requests: write

# 작업들
jobs:
    build:
     runs-on: ubuntu-latest
    
     steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build with Gradle # 빌드 작업
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          
      - name: setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8'
          mysql database: 'url'
          mysql user: 'test'
          mysql password: ${{ secrets.MYSQL_PASSWORD }} 

      - name: 테스트 결과를 'PR 코멘트'로 자동 작성
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()  # 실패 여부 상관없이 항상 실행~
        with:
          files: build/test-results/test/TEST-*.xml

      - name: 테스트 코드 중 테스트 실패한 부분에 'PR check'로 자동 작성
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: build/test-results/test/TEST-*.xml

      - name: 테스트 커버리지 리포트
        id: jacoco
        uses: madrapps/jacoco-report@v1.6
        with:
          title: Test Coverage Report
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 30
          min-coverage-changed-files: 50
